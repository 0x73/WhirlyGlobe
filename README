If you're new to WhirlyGlobe, please go read the main page.
http://mousebird.github.com/WhirlyGlobe/

What is WhirlyGlobe?
---

WhirlyGlobe is a self contained 3D earth display view suitable for use in iPhone and iPad applications. The globe is rendered in OpenGL ES with a pageable quad tree texture and support for vector data overlays. It is intended as a (relatively) lightweight widget that can be dropped in to your app to do simple data overlay and interaction with a globe. It can also do more heavy duty data interaction if you want to use it as the centerpiece for a globe based app.

This is the master branch of the WhirlyGlobe API.  It's the one you want, if you want the API.  However, I'd urge you to consider using the WhirlyGlobe Component.  It's simpler and does much of what the API can do.  Go check out that web page for details.

---

So you're determined, eh?  Well okay.  You'll need some things to build WhirlyGlobe and they're not set up as submodules.

Shapefile Reader:
http://shapelib.maptools.org/
http://download.osgeo.org/shapelib/

Grab shapelib-1.3.0b2 (or better) from that second link.  The version won't matter much.  It doesn't tend to change.
I'm including shapelib by source, and I put it in ../../utilities/shapelib-1.3.0b2/ relative to this directory.

Vector (and other) library:
http://eigen.tuxfamily.org/index.php?title=Main_Page

I'm using eigen3 for matrix math.  I put it under ../../utilities/eigen/ relative to this directory.

I'm using a complex polygon clipping library as well.  That one is included by reference, also in the ../../utilities dir.
http://www.angusj.com/delphi/clipper.php

Boost:
http://www.boost.org/

Don't freak out.  You don't have to compile it, just include some of the headers.

I put it under ../../utilities/boost_1_45_0 relative to this directory.  There's a newer version out (there always is) so just grab it and adjust the header paths if you like.
We're not using anything tricky here so newer versions should be fine.

The standard test program, WhirlyGlobeApp includes the WhirlyGlobe lib by reference, so it should just try to build it automatically.  There will be trouble with the paths.  Get that sorted out and you should be fine.

Questions to:  sjg@mousebirdconsulting.com

---

The old WhirlyGlobe 1.2 repo can be found on google code:
https://code.google.com/p/whirlyglobe/

